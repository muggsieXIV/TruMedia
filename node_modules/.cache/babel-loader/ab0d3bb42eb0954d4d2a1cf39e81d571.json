{"ast":null,"code":"import _slicedToArray from\"/Users/benniewalker/Desktop/2022_development/TruMedia/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import Loading from\"./Loading.jsx\";import Chart from'react-google-charts';import{jsx as _jsx}from\"react/jsx-runtime\";var BreakDown=function BreakDown(props){var pid=props.pid;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),stats=_useState2[0],setStats=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),breakdownLoaded=_useState4[0],setBreakdownLoaded=_useState4[1];var LineData=stats;var LineChartOptions={hAxis:{title:'Week'},vAxis:{title:'Total'},series:{1:{curveType:'function'}}};useEffect(function(){fetch(\"https://project.trumedianetworks.com/api/nfl/player/\"+pid,{method:'GET',mode:'cors',// headers: { 'Content-Type': 'application/json', 'tempToken': `${token}`, },\nheaders:{'Content-Type':'application/json','tempToken':'e5deccc5-1216-4a4a-bfe1-d3cc52c91670'}}).then(function(res){return res.json();}).then(function(res){var newStats=[];newStats.push(['x','Att','Cmp','Int','PsTD','RshTD','Sacks']);for(var _i=0,_Object$values=Object.values(res);_i<_Object$values.length;_i++){var value=_Object$values[_i];newStats.push([value.week,value.Att,value.Cmp,value.Int,value.PsTD,value.RshTD,value.Sack]);}setStats(newStats);console.log(newStats);setBreakdownLoaded(true);});});if(breakdownLoaded===true){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"container mt-5\",children:/*#__PURE__*/_jsx(Chart,{width:'auto',height:'600px',chartType:\"LineChart\",loader:/*#__PURE__*/_jsx(\"div\",{children:\"Loading Chart\"}),data:LineData,options:LineChartOptions,rootProps:{'data-testid':'4'}})})});}else{/*#__PURE__*/_jsx(Loading,{});}};export default BreakDown;","map":{"version":3,"names":["React","useEffect","useState","Loading","Chart","BreakDown","props","pid","stats","setStats","breakdownLoaded","setBreakdownLoaded","LineData","LineChartOptions","hAxis","title","vAxis","series","curveType","fetch","method","mode","headers","then","res","json","newStats","push","Object","values","value","week","Att","Cmp","Int","PsTD","RshTD","Sack","console","log"],"sources":["/Users/benniewalker/Desktop/2022_development/TruMedia/client/src/components/BreakDown.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Loading from \"./Loading.jsx\";\nimport Chart from 'react-google-charts'\n\nconst BreakDown = (props) => {\n    const pid = props.pid;\n    const [ stats, setStats ] = useState(null);\n    const [ breakdownLoaded, setBreakdownLoaded ] = useState(false);\n\n    const LineData = stats;\n\n    const LineChartOptions = {\n        hAxis: {\n            title: 'Week',\n        },\n        vAxis: {\n            title: 'Total',\n        },\n        series: {\n            1: { curveType: 'function' },\n        },\n    }\n\n    useEffect(()=>{\n        fetch(`https://project.trumedianetworks.com/api/nfl/player/` + pid, {\n        method: 'GET',\n        mode: 'cors',\n        // headers: { 'Content-Type': 'application/json', 'tempToken': `${token}`, },\n        headers: { 'Content-Type': 'application/json', 'tempToken': 'e5deccc5-1216-4a4a-bfe1-d3cc52c91670'},\n        })\n        .then( (res) => res.json() )\n        .then( res => {\n            const newStats = []\n            newStats.push(['x', 'Att', 'Cmp', 'Int', 'PsTD', 'RshTD', 'Sacks']);\n            for (let value of Object.values(res)) {\n                newStats.push([value.week, value.Att, value.Cmp, value.Int, value.PsTD, value.RshTD, value.Sack]);\n            }\n            setStats(newStats);\n\n            console.log(newStats);\n            setBreakdownLoaded(true);\n        });\n    });\n\n    if(breakdownLoaded === true ) {\n        return (\n            <div>\n                <div className=\"container mt-5\">\n                    <Chart\n                        width={'auto'}\n                        height={'600px'}\n                        chartType=\"LineChart\"\n                        loader={<div>Loading Chart</div>}\n                        data={LineData}\n                        options={LineChartOptions}\n                        rootProps={{ 'data-testid': '4' }}\n                    />\n                </div>\n            </div>\n        )\n    } else {\n        <Loading />\n    }\n}\n\nexport default BreakDown;\n"],"mappings":"kJAAA,MAAOA,MAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,QAAP,KAAoB,eAApB,CACA,MAAOC,MAAP,KAAkB,qBAAlB,C,2CAEA,GAAMC,UAAS,CAAG,QAAZA,UAAY,CAACC,KAAD,CAAW,CACzB,GAAMC,IAAG,CAAGD,KAAK,CAACC,GAAlB,CACA,cAA4BL,QAAQ,CAAC,IAAD,CAApC,wCAAQM,KAAR,eAAeC,QAAf,eACA,eAAgDP,QAAQ,CAAC,KAAD,CAAxD,yCAAQQ,eAAR,eAAyBC,kBAAzB,eAEA,GAAMC,SAAQ,CAAGJ,KAAjB,CAEA,GAAMK,iBAAgB,CAAG,CACrBC,KAAK,CAAE,CACHC,KAAK,CAAE,MADJ,CADc,CAIrBC,KAAK,CAAE,CACHD,KAAK,CAAE,OADJ,CAJc,CAOrBE,MAAM,CAAE,CACJ,EAAG,CAAEC,SAAS,CAAE,UAAb,CADC,CAPa,CAAzB,CAYAjB,SAAS,CAAC,UAAI,CACVkB,KAAK,CAAC,uDAAyDZ,GAA1D,CAA+D,CACpEa,MAAM,CAAE,KAD4D,CAEpEC,IAAI,CAAE,MAF8D,CAGpE;AACAC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAAsC,YAAa,sCAAnD,CAJ2D,CAA/D,CAAL,CAMCC,IAND,CAMO,SAACC,GAAD,QAASA,IAAG,CAACC,IAAJ,EAAT,EANP,EAOCF,IAPD,CAOO,SAAAC,GAAG,CAAI,CACV,GAAME,SAAQ,CAAG,EAAjB,CACAA,QAAQ,CAACC,IAAT,CAAc,CAAC,GAAD,CAAM,KAAN,CAAa,KAAb,CAAoB,KAApB,CAA2B,MAA3B,CAAmC,OAAnC,CAA4C,OAA5C,CAAd,EACA,4BAAkBC,MAAM,CAACC,MAAP,CAAcL,GAAd,CAAlB,+BAAsC,CAAjC,GAAIM,MAAK,mBAAT,CACDJ,QAAQ,CAACC,IAAT,CAAc,CAACG,KAAK,CAACC,IAAP,CAAaD,KAAK,CAACE,GAAnB,CAAwBF,KAAK,CAACG,GAA9B,CAAmCH,KAAK,CAACI,GAAzC,CAA8CJ,KAAK,CAACK,IAApD,CAA0DL,KAAK,CAACM,KAAhE,CAAuEN,KAAK,CAACO,IAA7E,CAAd,EACH,CACD5B,QAAQ,CAACiB,QAAD,CAAR,CAEAY,OAAO,CAACC,GAAR,CAAYb,QAAZ,EACAf,kBAAkB,CAAC,IAAD,CAAlB,CACH,CAjBD,EAkBH,CAnBQ,CAAT,CAqBA,GAAGD,eAAe,GAAK,IAAvB,CAA8B,CAC1B,mBACI,kCACI,YAAK,SAAS,CAAC,gBAAf,uBACI,KAAC,KAAD,EACI,KAAK,CAAE,MADX,CAEI,MAAM,CAAE,OAFZ,CAGI,SAAS,CAAC,WAHd,CAII,MAAM,cAAE,sCAJZ,CAKI,IAAI,CAAEE,QALV,CAMI,OAAO,CAAEC,gBANb,CAOI,SAAS,CAAE,CAAE,cAAe,GAAjB,CAPf,EADJ,EADJ,EADJ,CAeH,CAhBD,IAgBO,CACH,kBAAC,OAAD,KACH,CACJ,CA3DD,CA6DA,cAAeR,UAAf"},"metadata":{},"sourceType":"module"}